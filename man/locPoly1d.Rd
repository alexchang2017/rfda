% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{locPoly1d}
\alias{locPoly1d}
\title{One-dimensional kernel local polynominal smoother}
\usage{
locPoly1d(bandwidth, x, y, w, xout, kernel, drv, degree)
}
\arguments{
\item{bandwidth}{A single numerical value. The kernel smoothing parameter.}

\item{x}{A vector, the variable of of x-axis.}

\item{y}{A vector, the variable of of y-axis. \code{y[i]} is corresponding value of \code{x[i]}.}

\item{w}{A vector, the weight of data. \code{w[i]} is corresponding value of \code{x[i]}.}

\item{xout}{A vector, vector of output time points. It should be a sorted vecotr.}

\item{kernel}{A string. It could be 'gauss', 'gaussvar', 'epan' or 'quar'.}

\item{drv}{An integer, the order of derivative.}

\item{degree}{An integer, the degree of polynomial.}
}
\value{
A estimated value on \code{xout} by one-dimensional kernel local polynominal smoother.
}
\description{
Perform one-dimensional kernel local polynominal smoother for data \code{(x,y)} with weight \code{w} on \code{xout}.
}
\examples{
x <- runif(100, 0, 10)
y <- rnorm(100)
xout <- sort(runif(200, 0, 10))
est <- locPoly1d(1.2, x, y, rep(1, 100), xout, 'gauss', 0, 1)
require(ggplot2)
ggplot(data.frame(x,y), aes(x,y)) + geom_point() +
  geom_line(aes(xout, est), data = data.frame(xout, est))
}

