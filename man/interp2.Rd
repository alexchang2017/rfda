% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{interp2}
\alias{interp2}
\title{2-D data interpolation.}
\usage{
interp2(x, y, v, xi, yi, method)
}
\arguments{
\item{x}{A vector with n1 elements, \code{x[i]} is a support, \code{i = 1, ..., n1}.
If \code{x} is not sorted, it will be sorted. If \code{x} is not unique, the corresponding \code{v} values
will be averaged.}

\item{y}{A vector with n2 elements, \code{y[j]} is a support, \code{j = 1, ..., n2}.
If \code{y} is not sorted, it will be sorted. If \code{y} is not unique, the corresponding \code{v} values
will be averaged.}

\item{v}{A matrix with size n1 by n2, \code{v[i, j]} is the corresponding value at grid \code{(x[i], y[j])}.}

\item{xi}{A vector with m elements, \code{xi[k]} is the point which you want to interpolate,
\code{k = 1, ..., m1}.}

\item{yi}{A vector with m elements, \code{yi[l]} is the point which you want to interpolate,
\code{l = 1, ..., m2}.}

\item{method}{A string "linear" or "spline", the method of interpolation.}
}
\value{
A matrix with the interpolated values corresponding to \code{xi} and \code{yi}.
}
\description{
Returns interpolated values of a 2-D function at specific query points using
linear interpolation. The extrapolation is used, please be caution in using the
values which \code{xi} is larger than \code{max(x)/max(y)} and smaller than \code{min(x)/min(y)}.
}
\section{Reference}{

Cleve Moler, Numerical Computing with MATLAB, chapter 3,
  \url{http://www.mathworks.com/moler/index_ncm.html}. \cr
Kai Habel, Jaroslav Hajek, interp2, Octave.
}
\examples{
# example in MatLab
library(lattice)
# data generation
x <- seq(-3, 3, 1)
xm <- expand.grid(x, x)
z <- 3*(1-xm[,1])^2.*exp(-(xm[,1]^2) - (xm[,2]+1)^2) -
  10*(xm[,1]/5 - xm[,1]^3 - xm[,2]^5)*exp(-xm[,1]^2-xm[,2]^2) -
  1/3*exp(-(xm[,1]+1)^2 - xm[,2]^2)
dat <- data.frame(xm, z)
# graph of original data
wireframe(z ~ Var1 + Var2, dat, drape = TRUE, colorkey = TRUE)

xi <- seq(-3, 3, 0.25)
zi_l <- interp2(x, x, matrix(z, length(x)), xi, xi, 'linear')
dat_l <- data.frame(expand.grid(xi, xi), zi_l)
# graph of linearly interpolation
wireframe(zi_l ~ Var1 + Var2, dat_l, drape = TRUE, colorkey = TRUE)

zi_s <- interp2(x, x, matrix(z, length(x)), xi, xi, 'spline')
dat_s <- data.frame(expand.grid(xi, xi), zi_s)
# graph of interpolation with spline
wireframe(zi_s ~ Var1 + Var2, dat_s, drape = TRUE, colorkey = TRUE)
}

